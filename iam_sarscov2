#!/bin/bash

start=$(date +%s.%N)

DATE="$(date +'%Y-%m-%d')"

source activate pangolin

pangolin --update

[ ! -d $HOME/IAM_SARSCOV2/ANALYSIS ] && mkdir $HOME/IAM_SARSCOV2/ANALYSIS -v

for i in $(find ./ -type f -name "*R1*"); do cp "$i" $HOME/IAM_SARSCOV2/ANALYSIS/"$(echo "$i" | cut -d/ -f2 | cut -d_ -f1)"_R1.fastq.gz -v; done

for i in $(find ./ -type f -name "*R2*"); do cp "$i" $HOME/IAM_SARSCOV2/ANALYSIS/"$(echo "$i" | cut -d/ -f2 | cut -d_ -f1)"_R2.fastq.gz -v; done

cd $HOME/IAM_SARSCOV2/ANALYSIS

source activate iam_sarscov2

for i in $(find ./ -type f -name "*.fastq.gz" | while read o; do basename $o; done | cut -d_ -f1 | sort |uniq); do $HOME/IAM_SARSCOV2/sars2_assembly.sh $HOME/IAM_SARSCOV2/nCoV-2019.reference.fasta "$i"_R1.fastq.gz "$i"_R2.fastq.gz "$i" 12 10 75 $HOME/IAM_SARSCOV2/nCoV-2019.primers.fasta; done

for i in $(find ./ -type f -name "*pango.csv"); do cat "$i"; done | (sed -u 1q; sort) | uniq | sed '$d' | sed '$d' | sed -e 's/\,/\t/g' >> "$DATE"_pangolin.txt

for i in $(find ./ -type f -name "*nextclade.csv"); do cat "$i"; done | (sed -u 1q; sort) | uniq | sed '$d' | sed '$d' | sed -e 's/\;/\t/g' >> "$DATE"_nextclade.txt

for i in $(find ./ -type f -name "*chromosomes.report"); do cat "$i"; done | (sed -u 1q; sort) | uniq | sed '$d' >> "$DATE"_stats.txt

for i in $(find ./ -type f -name "*.depth10.minor.fa"); do cat "$i" >> "$DATE"_consensus.tmp; done

for i in $(find ./ -type f -name "*.depth10.fa"); do cat "$i" >> "$DATE"_consensus.tmp; done

source activate iam_sarscov2

seqkit grep -vip "MN908947.3_minor" "$DATE"_consensus.tmp | seqkit sort -n - > "$DATE"_consensus.fa

rm -rf *.fastq.gz *.tmp

source activate plot

for i in $(find ./ -type f -name "*.bam" | while read o; do basename $o | cut -d. -f1; done | sort | uniq); do fastcov -l "$i".results/"$i".sorted.bam -o "$i".results/"$i".coverage.pdf; gs -dSAFER -r3000 -sDEVICE=pdfwrite -dNOPAUSE -dBATCH -sOUTPUTFILE="$DATE"_coverage_depth.pdf "$i".results/*.pdf; done

end=$(date +%s.%N)

runtime=$(python -c "print(${end} - ${start})")

echo "" && echo "Done. The runtime was $runtime seconds."

#!/bin/bash

usage () {
    echo "
IGM_SARSCOV2
------------
Reference guided genome assembly of SARS-CoV-2 (Using ViralFlow v0.0.5 - dezordi/ViralFlow)

Assembly + summary stats:
  $(basename "$0") -w 1 -p <primer scheme> -i <input path> -d <depth> -t <threads>

Assembly:
  $(basename "$0") -w 2 -p <primer scheme> -i <input path> -d <depth> -t <threads>

Summary stats:
  $(basename "$0") -w 3 -p <primer scheme> -i <input path> -t <threads>

Command line parameters:
  -d arg    Minimum depth to variant calling (default: 10).
  -h        Print this help and exit.
  -i arg    Path containing the Illumina fastQ sequencing data.
  -p arg    Primer scheme name used for generate tiling amplicons (i.e. ARTIC_V4.1).
  -t arg    Max number of threads (default: all cores minus 2).
  -u        Update conda dependencies.
  -v        Display version information and check for update.
  -w arg    Set the workflow option (1- assembly+summary; 2- assembly; 3- summary)."
exit -1
}

update () {
    mamba update -y -n base -c conda-forge -c anaconda -c bioconda -c defaults conda
    mamba update -y -n igm-sars2_assembly -c conda-forge -c anaconda -c bioconda -c defaults --all
    mamba update -y -n igm-sars2_summary -c conda-forge -c anaconda -c bioconda -c defaults --all
    source activate igm-sars2_summary
    pangolin --update
exit -1
}

version () {
    echo "
IGM_SARSCOV2
------------
Updated 12 Feb 2022
Using ViralFlow v0.0.5 (https://github.com/dezordi/ViralFlow)

Laboratório de Enfermidades Infecciosas Transmitidas por Vetores - LEITV
Fundação Oswaldo Cruz / Instituto Gonçalo Moniz - FIOCRUZ/BA
    "
exit -1
}

while getopts "d:i:hp:t:uvw:" OPT; do
    case "$OPT" in
        d) DEPTH="$OPTARG";;
        h) usage;;
        i) INPUT="$OPTARG";;
        p) PRIMERSCHEME="$OPTARG";;
        t) THREADS="$OPTARG";;
        u) update;;
        v) version;;
        w) WORKFLOW="$OPTARG";;
    esac
done

if [[ -z "$THREADS" ]]; then
    THREADS=$(lscpu | grep 'CPU(s):' | awk '{print $2}' | sed -n '1p' | awk '{print $1-2}')
fi

if [[ -z "$DEPTH" ]]; then
    DEPTH=10
fi

if [[ "$PRIMERSCHEME" == "RPIP" ]]; then
    if [[ -z "$HOME"/IGM_SARSCOV2/primer_schemes/RPIP.fasta ]]; then
        touch "$HOME"/IGM_SARSCOV2/primer_schemes/RPIP.fasta
    fi
fi

if [[ ! -z "$WORKFLOW" ]]; then
    if [[ "$WORKFLOW" == "1" ]]; then
        if [[ -z "$INPUT" ]] || [[ -z "$PRIMERSCHEME" ]]; then
            usage
        else
            LIBRARY_NAME=$(basename "$INPUT")
            ANALYSISDIR="$HOME"/IGM_SARSCOV2/"$LIBRARY_NAME"_depth"$DEPTH"X_ANALYSIS
            [[ ! -d "$ANALYSISDIR" ]] && mkdir "$ANALYSISDIR" && chmod 700 -R "$ANALYSISDIR"
            echo "" && echo "Output path: "$ANALYSISDIR""
            echo "" && echo "Log Analysis: "$ANALYSISDIR"/"$LIBRARY_NAME"."$PRIMERSCHEME".depth"$DEPTH"X.log.$(uname -n).$(date +'%Y-%m-%d').txt"
            echo "" && echo "To display the log output in fulscreen: watch tail -n 20 "$ANALYSISDIR"/"$LIBRARY_NAME"."$PRIMERSCHEME".depth"$DEPTH"X.log.$(uname -n).$(date +'%Y-%m-%d').txt"
        fi
    elif [[ "$WORKFLOW" == "2" ]]; then
        if [[ -z "$INPUT" ]] || [[ -z "$PRIMERSCHEME" ]]; then
            usage
        else
            LIBRARY_NAME=$(basename "$INPUT")
            ANALYSISDIR="$HOME"/IGM_SARSCOV2/"$LIBRARY_NAME"_depth"$DEPTH"X_ANALYSIS
            [[ ! -d "$ANALYSISDIR" ]] && mkdir "$ANALYSISDIR" && chmod 700 -R "$ANALYSISDIR"
            echo "" && echo "Output path: "$ANALYSISDIR""
            echo "" && echo "Log Analysis: "$ANALYSISDIR"/"$LIBRARY_NAME"."$PRIMERSCHEME".depth"$DEPTH"X.log.$(uname -n).$(date +'%Y-%m-%d').txt"
            echo "" && echo "To display the log output in fulscreen: watch tail -n 20 "$ANALYSISDIR"/"$LIBRARY_NAME"."$PRIMERSCHEME".depth"$DEPTH"X.log.$(uname -n).$(date +'%Y-%m-%d').txt"
        fi
    elif [[ "$WORKFLOW" == "3" ]]; then
        if [[ -z "$INPUT" ]] || [[ -z "$PRIMERSCHEME" ]]; then
            usage
        else
            LIBRARY_NAME=$(basename "$INPUT")
            ANALYSISDIR="$HOME"/IGM_SARSCOV2/"$LIBRARY_NAME"_depth"$DEPTH"X_ANALYSIS
            [[ ! -d "$ANALYSISDIR" ]] && mkdir "$ANALYSISDIR" && chmod 700 -R "$ANALYSISDIR"
            echo "" && echo "Output path: "$ANALYSISDIR""
            echo "" && echo "Log Analysis: "$ANALYSISDIR"/"$LIBRARY_NAME"."$PRIMERSCHEME".depth"$DEPTH"X.log.$(uname -n).$(date +'%Y-%m-%d').txt"
            echo "" && echo "To display the log output in fulscreen: watch tail -n 20 "$ANALYSISDIR"/"$LIBRARY_NAME"."$PRIMERSCHEME".depth"$DEPTH"X.log.$(uname -n).$(date +'%Y-%m-%d').txt"
        fi
    else
        usage
    fi
else
    usage
fi

bg() {

    start=$(date +%s.%N)

    if [[ ! -z "$WORKFLOW" ]]; then
        if [[ "$WORKFLOW" == "1" ]]; then
            if [[ -z "$INPUT" ]] || [[ -z "$PRIMERSCHEME" ]]; then
                usage
            else
                if [[ -z "$ANALYSISDIR"/"$LIBRARY_NAME".folder_info.txt ]]; then
                    echo "folder#read" | tr '#' '\t' > "$ANALYSISDIR"/"$LIBRARY_NAME".folder_info.txt
                fi
                find "$INPUT" -type f -name "*.fastq.gz" | awk -F/ '{print $(NF-1),$NF}' | tr '[:blank:]' '\t' | awk '/.fastq.gz/d' >> "$ANALYSISDIR"/"$LIBRARY_NAME".folder_info.$(date +'%Y-%m-%d').txt
                for i in $(find "$INPUT" -type f -name "*_R1_*"); do
                    cp "$i" "$ANALYSISDIR"/$(echo "$i" | awk -F/ '{print $NF}' | awk -F"-|_" '{print $1}').R1.fastq.gz -v
                done
                for i in $(find "$INPUT" -type f -name "*_R2_*"); do
                    cp "$i" "$ANALYSISDIR"/$(echo "$i" | awk -F/ '{print $NF}' | awk -F"-|_" '{print $1}').R2.fastq.gz -v
                done
                source activate igm-sars2_assembly
                for i in $(find "$ANALYSISDIR" -type f -name "*.fastq.gz" | awk -F/ '{print $NF}' | awk -F. '{print $1}' | sort -u); do
                    bash "$HOME"/IGM_SARSCOV2/scripts/sars2_assembly "$HOME"/IGM_SARSCOV2/ref_seq/MN908947.3.fasta "$ANALYSISDIR"/"$i".R1.fastq.gz "$ANALYSISDIR"/"$i".R2.fastq.gz "$i" "$THREADS" "$DEPTH" 75 "$HOME"/IGM_SARSCOV2/primer_schemes/"$PRIMERSCHEME".fasta "$ANALYSISDIR"
                done
                [[ ! -f "$ANALYSISDIR"/summary.tmp ]] && echo "SampleId#NumberTotalReads#NumberReadsMapped#AverageDepth#Depth10x#Depth100x#Depth1000x#ReferenceCoverage#NCount#NCountPercent#PangolinVersion#PangoLearnVersion#PangoLineage#NextcladeVersion#Clade#Substitutions#Deletions#Insertions#Missing#aaSubstitutions#aaDeletions" | tr '#' '\t' > "$ANALYSISDIR"/summary.tmp
                source activate igm-sars2_summary
                for i in $(find "$ANALYSISDIR" -type d -name "*.results" | awk -F/ '{print $NF}' | awk -F. '{print $1}' | sort -u); do
                    echo -n "#" | tr '#' '\n' >> "$ANALYSISDIR"/summary.tmp
                    echo -n "$i""#" | tr '#' '\t' >> "$ANALYSISDIR"/summary.tmp
                    samtools view -c "$ANALYSISDIR"/"$i".results/"$i".sorted.bam | awk '{printf $0"#"}' | tr '#' '\t' >> "$ANALYSISDIR"/summary.tmp
                    samtools view -c -h -F 4 "$ANALYSISDIR"/"$i".results/"$i".sorted.bam | awk '{printf $0"#"}' | tr '#' '\t' >> "$ANALYSISDIR"/summary.tmp
                    AVGDEPTH=$(samtools depth "$ANALYSISDIR"/"$i".results/"$i".sorted.bam | awk '{sum+=$3} END {print sum/NR}')
                    if [[ "$AVGDEPTH" == 0 ]]; then
                        echo "0""#" | tr '#' '\t' | tr -d '\n' >> "$ANALYSISDIR"/summary.tmp
                    else
                        echo "$AVGDEPTH" | awk '{printf $0"#"}' | tr '#' '\t' | tr -d '\n' >> "$ANALYSISDIR"/summary.tmp
                    fi
                    paste <(samtools depth "$ANALYSISDIR"/"$i".results/"$i".sorted.bam | awk '{if ($3 > '"10"') {print $0}}' | wc -l) <(fastalength "$HOME"/IGM_SARSCOV2/ref_seq/MN908947.3.fasta | awk '{print $1}') | awk -F"\t" '{printf("%0.2f\n", $1/$2*100)}' | awk '{printf $0"#"}' | tr '#' '\t' >> "$ANALYSISDIR"/summary.tmp
                    paste <(samtools depth "$ANALYSISDIR"/"$i".results/"$i".sorted.bam | awk '{if ($3 > '"100"') {print $0}}' | wc -l) <(fastalength "$HOME"/IGM_SARSCOV2/ref_seq/MN908947.3.fasta | awk '{print $1}') | awk -F"\t" '{printf("%0.2f\n", $1/$2*100)}' | awk '{printf $0"#"}' | tr '#' '\t' >> "$ANALYSISDIR"/summary.tmp
                    paste <(samtools depth "$ANALYSISDIR"/"$i".results/"$i".sorted.bam | awk '{if ($3 > '"1000"') {print $0}}' | wc -l) <(fastalength "$HOME"/IGM_SARSCOV2/ref_seq/MN908947.3.fasta | awk '{print $1}') | awk -F"\t" '{printf("%0.2f\n", $1/$2*100)}' | awk '{printf $0"#"}' | tr '#' '\t' >> "$ANALYSISDIR"/summary.tmp
                    DEPTH=$(find "$ANALYSISDIR" -type f -name "*depth*[0-9].fa" | sed '1q' | awk -F. '{print $(NF-1)}')
                    NCOUNT=$(seqtk comp "$ANALYSISDIR"/"$i".results/"$i"."$DEPTH".fa | awk -F"\t" '{print $9}')
                    REVCOV=$(paste <(fastalength "$HOME"/IGM_SARSCOV2/ref_seq/MN908947.3.fasta | awk '{print $1}') <(seqtk comp "$ANALYSISDIR"/"$i".results/"$i"."$DEPTH".fa | awk -F"\t" '{print $9}') | awk -F"\t" '{printf("%0.2f\n", ($1-$2)/$1*100)}')
                    NCOUNTPER=$(paste <(seqtk comp "$ANALYSISDIR"/"$i".results/"$i"."$DEPTH".fa | awk -F"\t" '{print $9}') <(fastalength "$HOME"/IGM_SARSCOV2/ref_seq/MN908947.3.fasta | awk '{print $1}')| awk -F"\t" '{printf("%0.2f\n", ($1/$2)*100)}')
                    if [[ "$NCOUNT" == 0 ]]; then
                        echo "0""#" | tr '#' '\t' | tr -d '\n' >> "$ANALYSISDIR"/summary.tmp
                        echo "29903""#" | tr '#' '\t' | tr -d '\n' >> "$ANALYSISDIR"/summary.tmp
                        echo "100""#" | tr '#' '\t' | tr -d '\n' >> "$ANALYSISDIR"/summary.tmp
                    else
                        echo "$REVCOV" | awk '{printf $0"#"}' | tr '#' '\t' | tr -d '\n' >> "$ANALYSISDIR"/summary.tmp
                        echo "$NCOUNT" | awk '{printf $0"#"}' | tr '#' '\t' | tr -d '\n' >> "$ANALYSISDIR"/summary.tmp
                        echo "$NCOUNTPER" | awk '{printf $0"#"}' | tr '#' '\t' | tr -d '\n' >> "$ANALYSISDIR"/summary.tmp
                    fi
                    cat "$ANALYSISDIR"/"$i".results/"$i"."$DEPTH".fa >> "$ANALYSISDIR"/preconsensus.tmp
                    cat "$ANALYSISDIR"/"$i".results/"$i"."$DEPTH".fa >> "$ANALYSISDIR"/preconsensus_with_minor.tmp
                    cat "$ANALYSISDIR"/"$i".results/"$i"."$DEPTH".fa.algn.minor.fa >> "$ANALYSISDIR"/preconsensus_with_minor.tmp
                    pangolin "$ANALYSISDIR"/"$i".results/"$i"."$DEPTH".fa -t "$THREADS" --outfile "$ANALYSISDIR"/"$i".results/"$i".lineage_report.csv
                    cat "$ANALYSISDIR"/"$i".results/"$i".lineage_report.csv | sed -n 2p | awk -F, '{print $9"\t"$10"\t"$2}' | awk '{printf $0"#"}' | tr '#' '\t' >> "$ANALYSISDIR"/summary.tmp
                    nextclade --version | awk '{printf $0"#"}' | tr '#' '\t' >> "$ANALYSISDIR"/summary.tmp
                    nextclade -i "$ANALYSISDIR"/"$i".results/"$i"."$DEPTH".fa -j "$THREADS" -c "$ANALYSISDIR"/"$i".results/"$i".nextclade.csv
                    cat "$ANALYSISDIR"/"$i".results/"$i".nextclade.csv | sed -n 2p | tr ";" "\t" | awk -F"\t" '{print $2"\t"$11"\t"$12"\t"$13"\t"$14"\t"$17"\t"$19}' | awk '{printf $0}' >> "$ANALYSISDIR"/summary.tmp
                    fastcov.py -l "$ANALYSISDIR"/"$i".results/"$i".sorted.bam -o "$ANALYSISDIR"/"$i".results/"$i".coverage.pdf
                done
                sed '/^[[:space:]]*$/d' "$ANALYSISDIR"/summary.tmp > "$ANALYSISDIR"/"$LIBRARY_NAME"."$PRIMERSCHEME".depth"$DEPTH"X.summary.$(uname -n).$(date +'%Y-%m-%d').txt
                gs -dSAFER -r3000 -sDEVICE=pdfwrite -dNOPAUSE -dBATCH -sOUTPUTFILE="$ANALYSISDIR"/"$LIBRARY_NAME"."$PRIMERSCHEME".depth"$DEPTH"X.coverage.$(uname -n).$(date +'%Y-%m-%d').pdf "$ANALYSISDIR"/*.results/*.pdf
                mafft --thread "$THREADS" --quiet --auto --keeplength --inputorder --6merpair --leavegappyregion --addfragments "$ANALYSISDIR"/preconsensus.tmp "$HOME"/IGM_SARSCOV2/ref_seq/MN908947.3.fasta | seqkit grep -vip MN908947.3 | sed '/>/!y/atcgn-/ATCGNN/' >> "$ANALYSISDIR"/"$LIBRARY_NAME"."$PRIMERSCHEME".depth"$DEPTH"X.consensus.$(uname -n).$(date +'%Y-%m-%d').fasta
                mafft --thread "$THREADS" --quiet --auto --keeplength --inputorder --6merpair --leavegappyregion --addfragments "$ANALYSISDIR"/preconsensus_with_minor.tmp "$HOME"/IGM_SARSCOV2/ref_seq/MN908947.3.fasta | seqkit grep -vip MN908947.3,MN908947.3_minor | sed '/>/!y/atcgn-/ATCGNN/' >> "$ANALYSISDIR"/preconsensus_with_minor_2.tmp
                seqkit sort -n "$ANALYSISDIR"/preconsensus_with_minor_2.tmp -o "$ANALYSISDIR"/"$LIBRARY_NAME"."$PRIMERSCHEME".depth"$DEPTH"X.consensus_with_minor.$(uname -n).$(date +'%Y-%m-%d').fasta
            fi
        elif [[ "$WORKFLOW" == "2" ]]; then
            if [[ -z "$INPUT" ]] || [[ -z "$PRIMERSCHEME" ]]; then
                usage
            else
                if [[ -z "$ANALYSISDIR"/"$LIBRARY_NAME".folder.info.txt ]]; then
                    echo "folder#read" | tr '#' '\t' > "$ANALYSISDIR"/"$LIBRARY_NAME".folder_info.txt
                fi
                find "$INPUT" -type f -name "*.fastq.gz" | awk -F/ '{print $(NF-1),$NF}' | tr '[:blank:]' '\t' | awk '/.fastq.gz/d' >> "$ANALYSISDIR"/"$LIBRARY_NAME"_folder_info_$(date +'%Y-%m-%d').txt
                for i in $(find "$INPUT" -type f -name "*_R1_*"); do
                    cp "$i" "$ANALYSISDIR"/$(echo "$i" | awk -F/ '{print $NF}' | awk -F"-|_" '{print $1}').R1.fastq.gz -v
                done
                for i in $(find "$INPUT" -type f -name "*_R2_*"); do
                    cp "$i" "$ANALYSISDIR"/$(echo "$i" | awk -F/ '{print $NF}' | awk -F"-|_" '{print $1}').R2.fastq.gz -v
                done
                source activate igm-sars2_assembly
                for i in $(find "$ANALYSISDIR" -type f -name "*.fastq.gz" | awk -F/ '{print $NF}' | awk -F. '{print $1}' | sort -u); do
                    bash "$HOME"/IGM_SARSCOV2/scripts/sars2_assembly "$HOME"/IGM_SARSCOV2/ref_seq/MN908947.3.fasta "$ANALYSISDIR"/"$i"_R1.fastq.gz "$ANALYSISDIR"/"$i"_R2.fastq.gz "$i" "$THREADS" "$DEPTH" 75 "$HOME"/IGM_SARSCOV2/primer_schemes/"$PRIMERSCHEME".fasta "$ANALYSISDIR"
                done
            fi
        elif [[ "$WORKFLOW" == "3" ]]; then
            if [[ -z "$INPUT" ]]; then
                usage
            else
                [[ ! -f "$ANALYSISDIR"/summary.tmp ]] && echo "SampleId#NumberTotalReads#NumberReadsMapped#AverageDepth#Depth10x#Depth100x#Depth1000x#ReferenceCoverage#NCount#NCountPercent#PangolinVersion#PangoLearnVersion#PangoLineage#NextcladeVersion#Clade#Substitutions#Deletions#Insertions#Missing#aaSubstitutions#aaDeletions" | tr '#' '\t' > "$ANALYSISDIR"/summary.tmp
                source activate igm-sars2_summary
                for i in $(find "$ANALYSISDIR" -type d -name "*.results" | awk -F/ '{print $NF}' | awk -F. '{print $1}' | sort -u); do
                    echo -n "#" | tr '#' '\n' >> "$ANALYSISDIR"/summary.tmp
                    echo -n "$i""#" | tr '#' '\t' >> "$ANALYSISDIR"/summary.tmp
                    samtools view -c "$ANALYSISDIR"/"$i".results/"$i".sorted.bam | awk '{printf $0"#"}' | tr '#' '\t' >> "$ANALYSISDIR"/summary.tmp
                    samtools view -c -h -F 4 "$ANALYSISDIR"/"$i".results/"$i".sorted.bam | awk '{printf $0"#"}' | tr '#' '\t' >> "$ANALYSISDIR"/summary.tmp
                    AVGDEPTH=$(samtools depth "$ANALYSISDIR"/"$i".results/"$i".sorted.bam | awk '{sum+=$3} END {print sum/NR}')
                    if [[ "$AVGDEPTH" == 0 ]]; then
                        echo "0""#" | tr '#' '\t' | tr -d '\n' >> "$ANALYSISDIR"/summary.tmp
                    else
                        echo "$AVGDEPTH" | awk '{printf $0"#"}' | tr '#' '\t' | tr -d '\n' >> "$ANALYSISDIR"/summary.tmp
                    fi
                    paste <(samtools depth "$ANALYSISDIR"/"$i".results/"$i".sorted.bam | awk '{if ($3 > '"10"') {print $0}}' | wc -l) <(fastalength "$HOME"/IGM_SARSCOV2/ref_seq/MN908947.3.fasta | awk '{print $1}') | awk -F"\t" '{printf("%0.2f\n", $1/$2*100)}' | awk '{printf $0"#"}' | tr '#' '\t' >> "$ANALYSISDIR"/summary.tmp
                    paste <(samtools depth "$ANALYSISDIR"/"$i".results/"$i".sorted.bam | awk '{if ($3 > '"100"') {print $0}}' | wc -l) <(fastalength "$HOME"/IGM_SARSCOV2/ref_seq/MN908947.3.fasta | awk '{print $1}') | awk -F"\t" '{printf("%0.2f\n", $1/$2*100)}' | awk '{printf $0"#"}' | tr '#' '\t' >> "$ANALYSISDIR"/summary.tmp
                    paste <(samtools depth "$ANALYSISDIR"/"$i".results/"$i".sorted.bam | awk '{if ($3 > '"1000"') {print $0}}' | wc -l) <(fastalength "$HOME"/IGM_SARSCOV2/ref_seq/MN908947.3.fasta | awk '{print $1}') | awk -F"\t" '{printf("%0.2f\n", $1/$2*100)}' | awk '{printf $0"#"}' | tr '#' '\t' >> "$ANALYSISDIR"/summary.tmp
                    DEPTH=$(find "$ANALYSISDIR" -type f -name "*depth*[0-9].fa" | sed '1q' | awk -F. '{print $(NF-1)}')
                    NCOUNT=$(seqtk comp "$ANALYSISDIR"/"$i".results/"$i"."$DEPTH".fa | awk -F"\t" '{print $9}')
                    REVCOV=$(paste <(fastalength "$HOME"/IGM_SARSCOV2/ref_seq/MN908947.3.fasta | awk '{print $1}') <(seqtk comp "$ANALYSISDIR"/"$i".results/"$i"."$DEPTH".fa | awk -F"\t" '{print $9}') | awk -F"\t" '{printf("%0.2f\n", ($1-$2)/$1*100)}')
                    NCOUNTPER=$(paste <(seqtk comp "$ANALYSISDIR"/"$i".results/"$i"."$DEPTH".fa | awk -F"\t" '{print $9}') <(fastalength "$HOME"/IGM_SARSCOV2/ref_seq/MN908947.3.fasta | awk '{print $1}')| awk -F"\t" '{printf("%0.2f\n", ($1/$2)*100)}')
                    if [[ "$NCOUNT" == 0 ]]; then
                        echo "0""#" | tr '#' '\t' | tr -d '\n' >> "$ANALYSISDIR"/summary.tmp
                        echo "29903""#" | tr '#' '\t' | tr -d '\n' >> "$ANALYSISDIR"/summary.tmp
                        echo "100""#" | tr '#' '\t' | tr -d '\n' >> "$ANALYSISDIR"/summary.tmp
                    else
                        echo "$REVCOV" | awk '{printf $0"#"}' | tr '#' '\t' | tr -d '\n' >> "$ANALYSISDIR"/summary.tmp
                        echo "$NCOUNT" | awk '{printf $0"#"}' | tr '#' '\t' | tr -d '\n' >> "$ANALYSISDIR"/summary.tmp
                        echo "$NCOUNTPER" | awk '{printf $0"#"}' | tr '#' '\t' | tr -d '\n' >> "$ANALYSISDIR"/summary.tmp
                    fi
                    cat "$ANALYSISDIR"/"$i".results/"$i"."$DEPTH".fa >> "$ANALYSISDIR"/preconsensus.tmp
                    cat "$ANALYSISDIR"/"$i".results/"$i"."$DEPTH".fa >> "$ANALYSISDIR"/preconsensus_with_minor.tmp
                    cat "$ANALYSISDIR"/"$i".results/"$i"."$DEPTH".fa.algn.minor.fa >> "$ANALYSISDIR"/preconsensus_with_minor.tmp
                    pangolin "$ANALYSISDIR"/"$i".results/"$i"."$DEPTH".fa -t "$THREADS" --outfile "$ANALYSISDIR"/"$i".results/"$i".lineage_report.csv
                    cat "$ANALYSISDIR"/"$i".results/"$i".lineage_report.csv | sed -n 2p | awk -F, '{print $9"\t"$10"\t"$2}' | awk '{printf $0"#"}' | tr '#' '\t' >> "$ANALYSISDIR"/summary.tmp
                    nextclade --version | awk '{printf $0"#"}' | tr '#' '\t' >> "$ANALYSISDIR"/summary.tmp
                    nextclade -i "$ANALYSISDIR"/"$i".results/"$i"."$DEPTH".fa -j "$THREADS" -c "$ANALYSISDIR"/"$i".results/"$i".nextclade.csv
                    cat "$ANALYSISDIR"/"$i".results/"$i".nextclade.csv | sed -n 2p | tr ";" "\t" | awk -F"\t" '{print $2"\t"$11"\t"$12"\t"$13"\t"$14"\t"$17"\t"$19}' | awk '{printf $0}' >> "$ANALYSISDIR"/summary.tmp
                    fastcov.py -l "$ANALYSISDIR"/"$i".results/"$i".sorted.bam -o "$ANALYSISDIR"/"$i".results/"$i".coverage.pdf
                done
                sed '/^[[:space:]]*$/d' "$ANALYSISDIR"/summary.tmp > "$ANALYSISDIR"/"$LIBRARY_NAME"."$PRIMERSCHEME".depth"$DEPTH"X.summary.$(uname -n).$(date +'%Y-%m-%d').txt
                gs -dSAFER -r3000 -sDEVICE=pdfwrite -dNOPAUSE -dBATCH -sOUTPUTFILE="$ANALYSISDIR"/"$LIBRARY_NAME"."$PRIMERSCHEME".depth"$DEPTH"X.coverage.$(uname -n).$(date +'%Y-%m-%d').pdf "$ANALYSISDIR"/*.results/*.pdf
                mafft --thread "$THREADS" --quiet --auto --keeplength --inputorder --6merpair --leavegappyregion --addfragments "$ANALYSISDIR"/preconsensus.tmp "$HOME"/IGM_SARSCOV2/ref_seq/MN908947.3.fasta | seqkit grep -vip MN908947.3 | sed '/>/!y/atcgn-/ATCGNN/' >> "$ANALYSISDIR"/"$LIBRARY_NAME"."$PRIMERSCHEME".depth"$DEPTH"X.consensus.$(uname -n).$(date +'%Y-%m-%d').fasta
                mafft --thread "$THREADS" --quiet --auto --keeplength --inputorder --6merpair --leavegappyregion --addfragments "$ANALYSISDIR"/preconsensus_with_minor.tmp "$HOME"/IGM_SARSCOV2/ref_seq/MN908947.3.fasta | seqkit grep -vip MN908947.3,MN908947.3_minor | sed '/>/!y/atcgn-/ATCGNN/' >> "$ANALYSISDIR"/preconsensus_with_minor_2.tmp
                seqkit sort -n "$ANALYSISDIR"/preconsensus_with_minor_2.tmp -o "$ANALYSISDIR"/"$LIBRARY_NAME"."$PRIMERSCHEME".depth"$DEPTH"X.consensus_with_minor.$(uname -n).$(date +'%Y-%m-%d').fasta
            fi
        else
            usage
        fi
    else
        usage
    fi

    rm -rf "$ANALYSISDIR"/*.fastq.gz "$ANALYSISDIR"/*.tmp "$HOME"/IGM_SARSCOV2/ref_seq/MN908947.3.fasta.*

    end=$(date +%s.%N)

    runtime=$(python -c "print(${end} - ${start})")

    echo "" && echo "Done. The runtime was "$runtime" seconds." && echo ""

}

bg &>>"$ANALYSISDIR"/"$LIBRARY_NAME"."$PRIMERSCHEME".depth"$DEPTH"X.log.$(uname -n).$(date +'%Y-%m-%d').txt &

exit 0

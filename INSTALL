#!/bin/bash

chmod 700 -R $HOME/IGM_SARSCOV2/bash_scripts $HOME/IGM_SARSCOV2/python_scripts

MYSHELL=$(echo $SHELL | awk -F/ '{print $NF}')

if [[ -z "$(which igm_sarscov2)" ]]; then
    echo 'export PATH=$HOME/IGM_SARSCOV2/bash_scripts:/usr/local/share/rsi/idl/bin:$PATH' >> $HOME/.${MYSHELL}rc
    echo 'export PATH=$HOME/IGM_SARSCOV2/python_scripts:/usr/local/share/rsi/idl/bin:$PATH' >> $HOME/.${MYSHELL}rc
fi

if [[ -z "$(which conda)" ]]; then
    cd
    wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
    bash Miniconda3-latest-Linux-x86_64.sh -bfp miniconda3
    rm Miniconda3-latest-Linux-x86_64.sh
    echo 'export PATH=$HOME/miniconda3/bin:/usr/local/share/rsi/idl/bin:$PATH' >> $HOME/.${MYSHELL}rc
    export PATH=$HOME/miniconda3/bin:/usr/local/share/rsi/idl/bin:$PATH
    conda install -y -c conda-forge mamba
    mamba update -y -c conda-forge -c anaconda -c bioconda -c defaults -n base conda
    mamba create -y -n igm_sarscov2 -c conda-forge -c anaconda -c bioconda -c defaults argparse bam-readcount biopython bwa exonerate fastp ivar mafft numpy pandas samtools==1.10 seqkit seqtk zlib
    mamba create -y -n nextclade -c conda-forge -c anaconda -c bioconda -c defaults nextclade_js
    mamba create -y -n plot -c conda-forge -c anaconda -c bioconda -c defaults ghostscript numpy pandas pysam seaborn
else
    if [[ -z "$(which mamba)" ]]; then
        conda install -y -c conda-forge mamba
        mamba update -y -c conda-forge -c anaconda -c bioconda -c defaults -n base conda
        if [[ -z "$(conda env list | grep grep "'/miniconda3/envs/igm_sarscov2'")" ]]; then
            mamba create -y -n igm_sarscov2 -c conda-forge -c anaconda -c bioconda -c defaults argparse bam-readcount biopython bwa exonerate fastp ivar mafft numpy pandas samtools==1.10 seqkit seqtk zlib
        fi
        if [[ -z "$(conda env list | grep "'/miniconda3/envs/nextclade'")" ]]; then
            mamba create -y -n nextclade -c conda-forge -c anaconda -c bioconda -c defaults nextclade_js
        fi
        if [[ -z "$(conda env list | grep "'/miniconda3/envs/plot'")" ]]; then
            mamba create -y -n plot -c conda-forge -c anaconda -c bioconda -c defaults ghostscript numpy pandas pysam seaborn
        fi
    else
        mamba update -y -c conda-forge -c anaconda -c bioconda -c defaults -n base conda
        if [[ -z "$(conda env list | grep "'/miniconda3/envs/igm_sarscov2'")" ]]; then
            mamba create -y -n igm_sarscov2 -c conda-forge -c anaconda -c bioconda -c defaults argparse bam-readcount biopython bwa exonerate fastp ivar mafft numpy pandas samtools==1.10 seqkit seqtk zlib
        fi
        if [[ -z "$(conda env list | grep "'/miniconda3/envs/nextclade'")" ]]; then
            mamba create -y -n nextclade -c conda-forge -c anaconda -c bioconda -c defaults nextclade_js
        fi
        if [[ -z "$(conda env list | grep "'/miniconda3/envs/plot'")" ]]; then
            mamba create -y -n plot -c conda-forge -c anaconda -c bioconda -c defaults ghostscript numpy pandas pysam seaborn
        fi
    fi
fi

if [[ -z "$(which fastcov.py)" ]]; then
    cd
    git clone https://github.com/RaverJay/fastcov
    cd fastcov
    echo 'export PATH=$HOME/fastcov:/usr/local/share/rsi/idl/bin:$PATH' >> $HOME/.${MYSHELL}rc
else
    source activate plot
    fastcov.py -h
fi

source activate pangolin
if [[ -z "$(which pangolin)" ]]; then
    cd
    git clone https://github.com/cov-lineages/pangolin.git
    cd pangolin
    mamba env create -f environment.yml
    source activate pangolin
    python setup.py install
fi
